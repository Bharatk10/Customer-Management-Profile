package com.zm.cpm.service;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.zm.cpm.dto.OrganizationProfileDTO;
import com.zm.cpm.mapper.OrganizationProfileMapper;
import com.zm.cpm.repository.OrganizationRespository;

import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor
public class OrganizationServiceImpl {
	
	@Value("${file.storage.location}")
	private String storageLocation;
	private OrganizationRespository organizationRespository;
	
	public void createOrg(OrganizationProfileDTO orgProfDto) {
		
		organizationRespository.save(OrganizationProfileMapper.toEntity(orgProfDto));
	}
	
	public void saveOrgDocuments(MultipartFile file, Integer orgId) {
		
	}
	
	
	private String storeFile(MultipartFile file, Integer orgId) {
		
		File orgDir=new File(storageLocation,"organization_"+orgId);
		
		if(!orgDir.exists()) {
				orgDir.mkdir();
		}
		
		
		File destinationFile= new File(orgDir,file.getOriginalFilename());
		try {
			file.transferTo(destinationFile);
		} catch (IllegalStateException | IOException e) {
		   System.err.println("File Not Created");
		}
		
		return destinationFile.getAbsolutePath();		
	}

}
